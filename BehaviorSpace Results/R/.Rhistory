setwd("~/Google Drive/Semester 8/Thesis/NetLogo GitHub/BehaviorSpace Results/R")
?read.csv
data <- read.csv("Bees R testing-table.csv", header = TRUE, skip = 6)
?filter
data1 <- filter(data, c1_mult >= c2_mult)
data1 <- filter(data, data$c1_mult >= data$c2_mult)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
data1 <- data %>% filter(c1_mult >= c2_mult)
t.test(rep(1, 3), 1:3)
t.test(rep(1, 6), 1:6)
View(data1)
r.data <- read.csv("Bees R testing-table.csv", header = TRUE, skip = 6, quote = "")
r.data <- read.csv("Bees R testing-table.csv", header = TRUE, skip = 6)
exp <- filter(r.data, r.data$resource_density = "\"dense\"")
exp <- filter(r.data, r.data$resource_density == "\"dense\"")
unique(exp$resource_density)
as.charcter(r.data$resource_density)
?as.character
as.character(r.data$resource_density)
as.character(r.data$resource_density)[1]
as.character(r.data$resource_density)[1][1]
t.test(filter(r.data, r.data$resource_density == "\"dense\"")$R,
filter(r.data, r.data$resource_density == "\"sparse\"")$R)
r.data.dense <- filter(r.data, r.data$resource_density == "\"dense\"")
r.data.sparse <- filter(r.data, r.data$resource_density == "\"sparse\"")
mean(r.data.dense$R)
mean(r.data.sparse$R)
r.data.dense.r <- r.data.dense$R
r.data.dense.r <- r.data.dense$R
r.data.sparse.r <- r.data.sparse$R
which.min(r.data.dense.r)
which.min(r.data.sparse.r)
r.data.dense.r[180]
r.data.dense[180,]
r.data <- r.data %>% filter(c1_mult >= c2_mult)
r.data.dense <- filter(r.data, r.data$resource_density == "\"dense\"")
r.data.dense.r <- r.data.dense$R
r.data.sparse <- filter(r.data, r.data$resource_density == "\"sparse\"")
r.data.sparse.r <- r.data.sparse$R
t.test(r.data.dense$R,r.data.sparse$R)
which.min(r.data.dense.r)
which.min(r.data.sparse.r)
r.data <- read.csv("Bees R testing-table.csv", header = TRUE, skip = 6)
r.data <- r.data %>% filter(c1_mult >= c2_mult)
r.data.dense <- filter(r.data, r.data$resource_density == "\"dense\"")
r.data.dense.r <- r.data.dense$R
r.data.sparse <- filter(r.data, r.data$resource_density == "\"sparse\"")
r.data.sparse.r <- r.data.sparse$R
View(r.data.dense)
View(r.data.dense)
View(r.data.sparse)
r.data.dense <- filter(r.data, r.data$resource_density == "\"dense\"")[,c(1,2,3,7)]
r.data <- read.csv("Bees R testing-table.csv", header = TRUE, skip = 6)
r.data <- r.data %>% filter(c1_mult >= c2_mult)
r.data.dense <- filter(r.data, r.data$resource_density == "\"dense\"")[,c(1,2,3,8)]
r.data <- read.csv("Bees R testing-table.csv", header = TRUE, skip = 6)[,c(1,2,3,8)]
r.data <- read.csv("Bees R testing-table.csv", header = TRUE, skip = 6)[,c(2,3,4,8)]
r.data <- read.csv("Bees R testing-table.csv", header = TRUE, skip = 6)[,c(2,3,4,8)]
r.data <- read.csv("Bees R testing-table.csv", header = TRUE, skip = 6)[,c(2,3,4,8)]
r.data <- read.csv("Bees R testing-table.csv", header = TRUE, skip = 6)[,c(2,3,4,8)]
r.data <- r.data %>% filter(c1_mult >= c2_mult)
r.data.dense <- filter(r.data, r.data$resource_density == "\"dense\"")
r.data.dense.r <- r.data.dense$R
r.data.sparse <- filter(r.data, r.data$resource_density == "\"sparse\"")
r.data.sparse.r <- r.data.sparse$R
r.data <- r.data %>% filter(c1_mult >= c2_mult)
r.data <- read.csv("Bees R testing-table.csv", header = TRUE, skip = 6)[,c(2,3,4,5,8)]
r.data <- r.data %>% filter(c1_mult >= c2_mult)
r.data.dense <- filter(r.data, r.data$resource_density == "\"dense\"")
r.data.dense.r <- r.data.dense$R
r.data.sparse <- filter(r.data, r.data$resource_density == "\"sparse\"")
r.data.sparse.r <- r.data.sparse$R
View(r.data.dense)
View(r.data.sparse)
install.packages(c("mgcv", "nlme", "nnet", "pbkrtest"))
library(dplyr)
setwd("~/Google Drive/Semester 8/Thesis/NetLogo GitHub/BehaviorSpace Results/R")
# Is number of resources significantly different from expected?
r.data <- read.csv("Bees resource_nums-table.csv", header = TRUE, skip = 6)
resource.num <- read.csv("Bees resource_nums-table.csv", header = TRUE, skip = 6)
resource.num <- read.csv("Bees resource_nums-table.csv", header = TRUE, skip = 6)
length(unique(resource.num))
length(apply(resource.num, 1, unique))
temp <- resource.num[1c(1, 9),]
temp <- resource.num[-c(1, 9),]
temp <- resource.num[,-c(1, 9)]
length(apply(temp, 1, unique))
temp[1,]
temp[2,]
?combn
x<- t.test(1:3, 1:3)
x
x[[2]]
x[[3]]
x[3]
x$p.value
x$p.value + 2
length(resource.num/10
)
length(resource.num)/10
nrow(resource.num)/10
perform.t.test <- function(idx) {
temp <- 10 * idx
to.test <- (temp-9):temp
to.test
}
perform.t.test(1)
perform.t.test(2)
perform.t.test(3)
perform.t.test(420)
perform.t.test <- function(idx) {
temp <- 10 * idx
to.test <- (temp-9):temp
results <- t.test(resource.num$num.patches.r[to.test],
resource.num$count.patches.with..resource..[to.test])
results
}
perform.t.test(1)
x <- perform.t.test(1)
x$p.value
1:(nrow(resource.num)/10)
resource.num <- read.csv("Bees resource_nums-table.csv", header = TRUE, skip = 6)
perform.t.test <- function(idx) {
temp <- 10 * idx
to.test <- (temp-9):temp
results <- t.test(resource.num$num.patches.r[to.test],
resource.num$count.patches.with..resource..[to.test])
results$p.value
}
sapply(1:(nrow(resource.num)/10), function(x)  perform.t.test(x))
p.vals <- sapply(1:(nrow(resource.num)/10), function(x)  perform.t.test(x))
length(p.vals <= 0.05)
length(p.vals >= 0.05)
sum(p.vals <= 0.05)
which(p.vals <= 0.05)
p.vals[11]
resource.num$num.patches.r[101:110]
resource.num$count.patches.with..resource..[101:110]
t.test(resource.num$num.patches.r[101:110], resource.num$count.patches.with..resource..[101:110])
resource.num$resource_density[which(p.vals <= 0.05)]
r.data <- read.csv("Bees R testing-table.csv", header = TRUE, skip = 6)[,c(2,3,4,5,8)]
r.data <- r.data %>% filter(c1_mult >= c2_mult)
r.data.dense <- filter(r.data, r.data$resource_density == "\"dense\"")
r.data.dense.r <- r.data.dense$R
r.data.sparse <- filter(r.data, r.data$resource_density == "\"sparse\"")
r.data.sparse.r <- r.data.sparse$R
View(r.data.dense)
resource.num <- read.csv("Bees resource_nums-table.csv", header = TRUE, skip = 6)
View(resource.num)
perform.t.test <- function(idx) {
temp <- 10 * idx
to.test <- (temp-9):temp
results <- t.test(resource.num$num.patches.r[to.test],
resource.num$count.patches.with..resource..[to.test])
results$p.value
}
p.vals <- sapply(1:(nrow(resource.num)/10), function(x)  perform.t.test(x))
sum(p.vals <= 0.05)
which(p.vals <= 0.05)
resource.num$resource_density[which(p.vals <= 0.05)]
duplicated(resource.num[-c(1,9)])
sum(!duplicated(resource.num[-c(1,9)]))
which(!duplicated(resource.num[-c(1,9)]))
resource.num <- read.csv("Bees resource_nums-table.csv", header = TRUE, skip = 6)
perform.t.test <- function(idx) {
to.test <- idx:(idx+9)
results <- t.test(resource.num$num.patches.r[to.test],
resource.num$count.patches.with..resource..[to.test])
results$p.value
}
nums.unique <- which(!duplicated(resource.num[-c(1,9)]))
p.vals <- sapply(nums.unique, function(x)  perform.t.test(x))
sum(p.vals <= 0.05)
which(p.vals <= 0.05)
resource.num$resource_density[which(p.vals <= 0.05)]
10 * which(p.vals <= 0.05)
resource.num$resource_density[10 * which(p.vals <= 0.05)]
resource.num[3971:3980,]
resource.num[3970:3981,]
t.test(resource.num[3971:3980,]$num.patches.r, resource.num[3971:3980,]$count.patches.with..resource..)
View(perform.t.test)
resource.num <- read.csv("Bees resource_nums-table.csv", header = TRUE, skip = 6)
View(resource.num)
?t.test
perform.t.test <- function(idx) {
to.test <- idx:(idx+9)
results <- t.test(resource.num$count.patches.with..resource..[to.test] - resource.num$num.patches.r[to.test])
results$p.value
}
nums.unique <- which(!duplicated(resource.num[-c(1,9)]))
p.vals <- sapply(nums.unique, function(x)  perform.t.test(x))
sum(p.vals <= 0.05)
10 * which(p.vals <= 0.05)
View(resource.num)
duplicated(resource.num[-c(1,9)])
?tapply
10 * which(p.vals <= 0.05)
r.data <- read.csv("Bees R testing-table.csv", header = TRUE, skip = 6)[,c(2,3,4,5,8)]
r.data <- r.data %>% filter(c1_mult >= c2_mult)
r.data.dense <- filter(r.data, r.data$resource_density == "\"dense\"")
r.data.dense.r <- r.data.dense$R
r.data.sparse <- filter(r.data, r.data$resource_density == "\"sparse\"")
r.data.sparse.r <- r.data.sparse$R
View(r.data.dense)
View(r.data.sparse)
