?sapply
install.packages(c("babynames", "curl", "Hmisc", "R.oo", "shiny"))
?for
?sapply
x <- 2
for(x in 1:3) {
x + 10
}
x
y <- c()
for(x in 1:3) {
y <- c(y, x + 10)
}
y
for(x in 1:3) {
y <- c(y, x + 10) ;
}
?randomforest
??randomforest
?randomForest
??randomForest
library(dplyr)
setwd("~/Google Drive/Semester 8/Thesis/NetLogo+R GitHub/BehaviorSpace Data/R Value/")
s.data.all <- read.csv("Bees R sparse testing_1500-table.csv", hheader = TRUE, skip = 6)
s.data.all$grp <- (floor((s.data.all$X.run.number.-1) / 10)) + 1
s.data <- s.data.all %>% filter(c1_mult > c2_mult)
s.num <- 0.03
## Divide data into groups s.num away from: R = 0.4, 0.6, 0.8
s.data.4 <- s.data %>% filter(abs(R - 0.4) <= s.num)
temp.4 <- which.max(table(s.data.4$grp))
table(s.data.4$grp)
s.idx.4 <- (10 * as.numeric(names(temp.4)))
s.data.all[s.idx.4,]
s.data.6 <- s.data %>% filter(abs(R - 0.6) <= s.num)
temp.6 <- which.max(table(s.data.6$grp))
table(s.data.6$grp)
s.idx.6 <- 10 * as.numeric(names(temp.6))
s.data.all[s.idx.6,]
s.data.8 <- s.data %>% filter(abs(R - 0.8) <= s.num)
temp.8 <- which.max(table(s.data.8$grp))
table(s.data.8$grp)
s.idx.8 <- 10 * as.numeric(names(temp.8))
s.data.all[s.idx.8,]
s.data.all <- read.csv("Bees R sparse testing_1500-table.csv", hheader = TRUE, skip = 6)
s.data.all <- read.csv("Bees R sparse testing_1500-table.csv", header = TRUE, skip = 6)
s.data.all <- read.csv("Bees R sparse testing_1500-table.csv", header = TRUE, skip = 6)
s.data.all$grp <- (floor((s.data.all$X.run.number.-1) / 10)) + 1
s.data <- s.data.all %>% filter(c1_mult > c2_mult)
s.num <- 0.03
## Divide data into groups s.num away from: R = 0.4, 0.6, 0.8
s.data.4 <- s.data %>% filter(abs(R - 0.4) <= s.num)
temp.4 <- which.max(table(s.data.4$grp))
table(s.data.4$grp)
s.idx.4 <- (10 * as.numeric(names(temp.4)))
s.data.all[s.idx.4,]
s.data.6 <- s.data %>% filter(abs(R - 0.6) <= s.num)
temp.6 <- which.max(table(s.data.6$grp))
table(s.data.6$grp)
s.idx.6 <- 10 * as.numeric(names(temp.6))
s.data.all[s.idx.6,]
s.data.8 <- s.data %>% filter(abs(R - 0.8) <= s.num)
temp.8 <- which.max(table(s.data.8$grp))
table(s.data.8$grp)
s.idx.8 <- 10 * as.numeric(names(temp.8))
s.data.all[s.idx.8,]
View(s.data)
View(s.data.all)
s.data.all <- read.csv("Bees R sparse testing_1500-table.csv", header = TRUE, skip = 6)
s.data.all$grp <- (floor((s.data.all$X.run.number.-1) / 4)) + 1
s.data <- s.data.all %>% filter(c1_mult > c2_mult)
s.num <- 0.03
## Divide data into groups s.num away from: R = 0.4, 0.6, 0.8
s.data.4 <- s.data %>% filter(abs(R - 0.4) <= s.num)
temp.4 <- which.max(table(s.data.4$grp))
table(s.data.4$grp)
s.idx.4 <- (4 * as.numeric(names(temp.4)))
s.data.all[s.idx.4,]
s.data.6 <- s.data %>% filter(abs(R - 0.6) <= s.num)
temp.6 <- which.max(table(s.data.6$grp))
table(s.data.6$grp)
s.idx.6 <- 4 * as.numeric(names(temp.6))
s.data.all[s.idx.6,]
s.data.8 <- s.data %>% filter(abs(R - 0.8) <= s.num)
temp.8 <- which.max(table(s.data.8$grp))
table(s.data.8$grp)
s.idx.8 <- 4 * as.numeric(names(temp.8))
s.data.all[s.idx.8,]
s.data.4 <- s.data %>% filter(abs(R - 0.5) <= s.num)
temp.4 <- which.max(table(s.data.4$grp))
table(s.data.4$grp)
s.idx.4 <- (4 * as.numeric(names(temp.4)))
s.data.all[s.idx.4,]
View(s.data.4)
s.data.all <- read.csv("Bees R sparse testing_1500-table.csv", header = TRUE, skip = 6)
s.data.all$grp <- (floor((s.data.all$X.run.number.-1) / 4)) + 1
s.data <- s.data.all %>% filter(c1_mult > c2_mult)
s.num <- 0.03
## Divide data into groups s.num away from: R = 0.4, 0.6, 0.8
s.data.4 <- s.data %>% filter(abs(R - 0.4) <= s.num)
temp.4 <- which.max(table(s.data.4$grp))
table(s.data.4$grp)
s.idx.4 <- (4 * as.numeric(names(temp.4)))
s.data.all[s.idx.4,]
s.data.6 <- s.data %>% filter(abs(R - 0.6) <= s.num)
temp.6 <- which.max(table(s.data.6$grp))
table(s.data.6$grp)
s.idx.6 <- 4 * as.numeric(names(temp.6))
s.data.all[s.idx.6,]
s.data.8 <- s.data %>% filter(abs(R - 0.8) <= s.num)
temp.8 <- which.max(table(s.data.8$grp))
table(s.data.8$grp)
s.idx.8 <- 4 * as.numeric(names(temp.8))
s.data.all[s.idx.8,]
s.data.all[805:808,]
s.data.all[585:588,]
s.data.all[589:592,]
