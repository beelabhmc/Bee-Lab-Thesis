?sapply
install.packages(c("babynames", "curl", "Hmisc", "R.oo", "shiny"))
?for
?sapply
x <- 2
for(x in 1:3) {
x + 10
}
x
y <- c()
for(x in 1:3) {
y <- c(y, x + 10)
}
y
for(x in 1:3) {
y <- c(y, x + 10) ;
}
?randomforest
??randomforest
?randomForest
??randomForest
x <- 2
all.data <- read.csv("Bees sim_all4-table.csv", skip = 6, stringsAsFactors=FALSE)
# Data calculation
all.data$energy.bee <- all.data$hive.collected / all.data$population
all.data$log.energy.bee <- log(all.data$energy.bee)
all.data$dance.avg <- all.data$dance.quality / all.data$dance.quantity
all.data$random.avg <- all.data$random.quality / all.data$random.quantity
all.data$avg.diff <-all.data$dance.avg - all.data$random.avg
# Data cleanup
names(all.data)[4] <- "communication"
all.data$communication <- as.factor(all.data$communication)
all.data$population <- as.factor(all.data$population)
all.data$environment <- as.factor(sapply(1:nrow(all.data),
function(i) {i <- paste(substr(all.data$resource_density[i],2,2),
": ", substr(all.data$R_value[i], 2,4),
sep = "")}))
# Dense
dense.data <- all.data %>% filter(resource_density == "\"dense\"")
dense.data$environment <- as.factor(as.character(dense.data$environment))
# Sparse
sparse.data <- all.data %>% filter(resource_density == "\"sparse\"")
sparse.data$environment <- as.factor(as.character(sparse.data$environment))
# Comm
comm.data <- all.data %>% filter(communication == TRUE)
# New table for dance and random avg quality
dance.data <- data.frame(energy.avg = comm.data$dance.avg, environment = comm.data$environment,
communication = comm.data$communication, population = comm.data$population,
id.method = rep("dance", length(comm.data[,1])))
random.data <- data.frame(energy.avg = comm.data$random.avg, environment = comm.data$environment,
communication = comm.data$communication, population = comm.data$population,
id.method = rep("random", length(comm.data[,1])))
avg.data <- rbind(dance.data, random.data)
setwd("~/Google Drive/Semester 8/Thesis/NetLogo+R GitHub/NetLogo R Analyses/Sim Analyses4")
all.data <- read.csv("Bees sim_all4-table.csv", skip = 6, stringsAsFactors=FALSE)
# Data calculation
all.data$energy.bee <- all.data$hive.collected / all.data$population
all.data$log.energy.bee <- log(all.data$energy.bee)
all.data$dance.avg <- all.data$dance.quality / all.data$dance.quantity
all.data$random.avg <- all.data$random.quality / all.data$random.quantity
all.data$avg.diff <-all.data$dance.avg - all.data$random.avg
# Data cleanup
names(all.data)[4] <- "communication"
all.data$communication <- as.factor(all.data$communication)
all.data$population <- as.factor(all.data$population)
all.data$environment <- as.factor(sapply(1:nrow(all.data),
function(i) {i <- paste(substr(all.data$resource_density[i],2,2),
": ", substr(all.data$R_value[i], 2,4),
sep = "")}))
# Dense
dense.data <- all.data %>% filter(resource_density == "\"dense\"")
dense.data$environment <- as.factor(as.character(dense.data$environment))
# Sparse
sparse.data <- all.data %>% filter(resource_density == "\"sparse\"")
sparse.data$environment <- as.factor(as.character(sparse.data$environment))
# Comm
comm.data <- all.data %>% filter(communication == TRUE)
# New table for dance and random avg quality
dance.data <- data.frame(energy.avg = comm.data$dance.avg, environment = comm.data$environment,
communication = comm.data$communication, population = comm.data$population,
id.method = rep("dance", length(comm.data[,1])))
random.data <- data.frame(energy.avg = comm.data$random.avg, environment = comm.data$environment,
communication = comm.data$communication, population = comm.data$population,
id.method = rep("random", length(comm.data[,1])))
avg.data <- rbind(dance.data, random.data)
library(dplyr)
all.data <- read.csv("Bees sim_all4-table.csv", skip = 6, stringsAsFactors=FALSE)
# Data calculation
all.data$energy.bee <- all.data$hive.collected / all.data$population
all.data$log.energy.bee <- log(all.data$energy.bee)
all.data$dance.avg <- all.data$dance.quality / all.data$dance.quantity
all.data$random.avg <- all.data$random.quality / all.data$random.quantity
all.data$avg.diff <-all.data$dance.avg - all.data$random.avg
# Data cleanup
names(all.data)[4] <- "communication"
all.data$communication <- as.factor(all.data$communication)
all.data$population <- as.factor(all.data$population)
all.data$environment <- as.factor(sapply(1:nrow(all.data),
function(i) {i <- paste(substr(all.data$resource_density[i],2,2),
": ", substr(all.data$R_value[i], 2,4),
sep = "")}))
# Dense
dense.data <- all.data %>% filter(resource_density == "\"dense\"")
dense.data$environment <- as.factor(as.character(dense.data$environment))
# Sparse
sparse.data <- all.data %>% filter(resource_density == "\"sparse\"")
sparse.data$environment <- as.factor(as.character(sparse.data$environment))
# Comm
comm.data <- all.data %>% filter(communication == TRUE)
# New table for dance and random avg quality
dance.data <- data.frame(energy.avg = comm.data$dance.avg, environment = comm.data$environment,
communication = comm.data$communication, population = comm.data$population,
id.method = rep("dance", length(comm.data[,1])))
random.data <- data.frame(energy.avg = comm.data$random.avg, environment = comm.data$environment,
communication = comm.data$communication, population = comm.data$population,
id.method = rep("random", length(comm.data[,1])))
avg.data <- rbind(dance.data, random.data)
boxplot(energy.avg ~ population+environment+id.method, data=avg.data),
col = c("green", "red"), las = 2, main = "Simulations with communication",
xlab = "Resource density (R value)", ylab = "Energy(J)/bee",
ylim = c(60, 250),
names = c("0.4", "0.4",
"0.6", "0.6",
"0.8", "0.8",
"1.0", "1.0",
"0.4", "0.4",
"0.6", "0.6",
"0.8", "0.8",
"1.0", "1.0"))
boxplot(energy.avg ~ population+environment+id.method, data=avg.data,
col = c("green", "red"), las = 2, main = "Simulations with communication",
xlab = "Resource density (R value)", ylab = "Energy(J)/bee",
ylim = c(60, 250),
names = c("0.4", "0.4",
"0.6", "0.6",
"0.8", "0.8",
"1.0", "1.0",
"0.4", "0.4",
"0.6", "0.6",
"0.8", "0.8",
"1.0", "1.0"))
legend("topright", pch = 15, col = c("green", "red", "brown", "blue"),
c("Pop=500", "Pop=3000"))
boxplot(energy.avg ~ population+environment+id.method, data=avg.data)
boxplot(energy.avg ~ population+environment+id.method, data=avg.data, cex.axis = 0.3)
boxplot(energy.avg ~ population+environment+id.method, data=avg.data, cex.axis = 0.5)
boxplot(energy.avg ~ id.method+population+environment, data=avg.data, cex.axis = 0.5)
anova(lm((dance.avg-random.avg) ~ environment+population, data = comm.data),
lm((dance.avg-random.avg) ~ environment*population, data = comm.data))
